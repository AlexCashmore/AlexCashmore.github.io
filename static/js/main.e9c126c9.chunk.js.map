{"version":3,"sources":["logo.svg","stores/generalStore.ts","stores/Stores.tsx","components/StrongSurvey.tsx","components/graph/spinner.js","components/graph/chartwrapper.js","components/graph/daily.js","components/StrongFactory.tsx","App.js","reportWebVitals.js","index.js"],"names":["GeneralStore","action","bound","rootStore","this","username","data","nextGoal","nextGoalInt","observable","cookie","get","JSON","parse","configure","enforceActions","create","storage","localStorage","jsonify","generalStore","StrongSurvey","props","state","showGraph","reps","activeQuestion","squat","bench","deadlift","submitted","length","loggingMax","squatReps","deadliftReps","benchReps","lift","e","type","setState","target","value","nextSquatGoal","calculateNextGoal","parseFloat","nextBenchGoal","nextDeadliftGoal","nextSquatGoalInt","calculateNextGoalInt","nextBenchGoalInt","set","prevData","console","log","prevDataSet","push","timestamp","moment","format","setData","setNextGoal","setNextGoalInt","remove","window","location","reload","className","style","width","display","marginTop","autoFocus","max","min","name","placeholder","onChange","handleSurveyChangeSquat","onKeyPress","event","key","disabled","handleSurveyChangeReps","document","activeElement","blur","handleSurveyChangeBench","handleSurveyChangeDeadlift","submitDataToCookies","Math","ceil","color","height","backgroundColor","justifyContent","margin","borderRadius","marginBottom","border","marginLeft","maxHeight","overflowY","overflowX","maxWidth","map","borderBottom","cursor","fontSize","onClick","removeData","renderActiveQuestion","toggleGraph","React","ObservedStrongSurvey","observer","Spinner","containerClass","size","htmlContainerProps","htmlPlaceholderProps","innerPlaceholder","getSpinner","componentRender","label","Component","defaultProps","contextTypes","router","PropTypes","object","isRequired","ChartWrapper","options","plugins","chartInstance","Chart","canvas","chartHandle","nextProps","nextData","deepEqual","nextOptions","updateChart","destroy","chart","config","update","ref","ctx","content","alignment","restore","usingMiddleAlignment","i","item","text","lines","split","j","font","helpers","fontString","fontStyle","fontFamily","textBaseline","textAlign","fillStyle","measureText","x","round","position","y","fillText","save","Daily","bind","selectedLegend","selectedOrganizations","dataItems","updated","legendItems","datasetIndex","hidden","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","pointStyle","strokeStyle","chartInstanceHandle","legend","forceUpdate","randHex","floor","random","toString","color2","color3","squatData","dataset","benchData","deadliftData","testData","dataset2","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","fill","showLine","chartConfig","labels","toISOString","Date","add","datasets","animationTime","hoverMode","stacked","annotation","annotations","tooltips","mode","intersect","enabled","callbacks","tooltipItems","yLabel","scales","xAxes","time","unit","displayFormats","day","tooltipFormat","ticks","source","scaleLabel","yAxes","stepSize","labelString","StrongFactory","multiplier","weight","activeDL","activeBench","activeSquat","activeOHP","paddingTop","setSubmitted","padding","calculateWeight","ObservedStrongFactory","App","inject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e9c126c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { action, observable } from 'mobx';\r\nimport { rootStore } from './Stores';\r\nimport cookie from 'js-cookie';\r\n\r\n\r\nexport default class GeneralStore {\r\n    rootStore: any;\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable username = 'User'\r\n    @observable data = typeof cookie.get('data')!==\"undefined\"?JSON.parse(cookie.get('data')):[];\r\n    @observable nextGoal = typeof cookie.get('nextGoal')!==\"undefined\"?JSON.parse(cookie.get('nextGoal')):{};\r\n    @observable nextGoalInt = typeof cookie.get('next')!==\"undefined\"?JSON.parse(cookie.get('next')):{};\r\n\r\n    @action.bound setUsername(username){\r\n        this.username = username\r\n    }\r\n    @action.bound setData(data){\r\n        this.data = data\r\n    }\r\n    @action.bound setNextGoal(data){\r\n        this.nextGoal = data\r\n    }\r\n    @action.bound setNextGoalInt(data){\r\n        this.nextGoalInt = data\r\n    }\r\n\r\n\r\n\r\n}\r\n","import {\r\n    action, configure, decorate, observable,\r\n} from 'mobx';\r\nimport generalStore from \"./generalStore\";\r\nimport {create} from \"mobx-persist\";\r\nconfigure({ enforceActions: 'observed' });\r\n\r\nconst hydrate = create({storage:localStorage,jsonify:true});\r\n\r\nexport class RootStore {\r\n    generalStore: generalStore;\r\n\r\n    constructor() {\r\n        this.generalStore = new generalStore(this);\r\n    }\r\n\r\n}\r\n\r\nexport const rootStore = new RootStore();\r\n","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport LineGraph from \"./graph/daily.js\";\r\nimport cookie from 'js-cookie';\r\n\r\n\r\nimport {toJS} from \"mobx\";\r\nimport moment from \"moment\";\r\nimport {rootStore} from \"../stores/Stores\";\r\n\r\nexport interface IHeaderState {\r\n    squat:any;\r\n    bench:any;\r\n    deadlift:any;\r\n    submitted:any;\r\n    activeQuestion:any;\r\n    reps:any;\r\n    benchReps:any;\r\n    squatReps:any;\r\n    deadliftReps:any;\r\n    loggingMax:any;\r\n    showGraph:any,\r\n}\r\ninterface IHeaderProps {\r\n    generalStore:any;\r\n    toggleGraph:any;\r\n\r\n}\r\n\r\n\r\nclass StrongSurvey extends React.Component<IHeaderProps, IHeaderState> {\r\n    constructor(props: IHeaderProps, state:IHeaderState) {\r\n        super(props);\r\n        this.state = { showGraph:false,reps:0,activeQuestion:'squat',squat:'',bench:'',deadlift:'',submitted:rootStore.generalStore.data.length>=1,\r\n            loggingMax:rootStore.generalStore.data.length<1,\r\n        squatReps:rootStore.generalStore.data.length>=1?0:1,deadliftReps:rootStore.generalStore.data.length>=1?0:1,benchReps:rootStore.generalStore.data.length>=1?0:1,};\r\n    }\r\n    calculateNextGoal(lift,reps) {\r\n        if (reps < 2) {\r\n            return `${lift} x 1+`\r\n        }\r\n        if(reps >=2 && reps <4){\r\n            return `${lift+2.5} x 1+`\r\n        }\r\n        if(reps >=4 && reps <=5){\r\n            return `${lift+3} x 1+`\r\n        }\r\n        if(reps>5){\r\n            return `${lift+6.8} x 1+`\r\n        }\r\n\r\n    }\r\n    calculateNextGoalInt(lift,reps) {\r\n        if (reps < 2) {\r\n            return lift\r\n        }\r\n        if(reps >=2 && reps <4){\r\n            return lift+2.5\r\n        }\r\n        if(reps >=4 && reps <=5){\r\n            return lift+3\r\n        }\r\n        if(reps>5){\r\n            return lift+6.8\r\n        }\r\n\r\n    }\r\n\r\n    handleSurveyChangeReps(e,type){\r\n        if(type==='squat'){\r\n            this.setState({\r\n                reps:e.target.value,\r\n                squatReps:e.target.value\r\n            });\r\n        }\r\n        if(type==='bench'){\r\n            this.setState({\r\n                reps:e.target.value,\r\n                benchReps:e.target.value\r\n            });\r\n        }\r\n        if(type==='deadlift'){\r\n            this.setState({\r\n                reps:e.target.value,\r\n                deadliftReps:e.target.value\r\n            });\r\n        }\r\n\r\n    }\r\n    handleSurveyChangeBench(e){\r\n        this.setState({\r\n            bench:e.target.value\r\n        });\r\n    }\r\n    handleSurveyChangeSquat(e){\r\n        this.setState({\r\n            squat:e.target.value\r\n        });\r\n    }\r\n    handleSurveyChangeDeadlift(e){\r\n        this.setState({\r\n            deadlift:e.target.value\r\n        });\r\n    }\r\n/*    submitDataToCookies(data){\r\n        const prevData = cookie.get('data')\r\n        console.log('prevData',typeof prevData,prevData,data);\r\n        const newData={data:{squat:parseInt(data.squat),deadlift:parseInt(data.deadlift),bench:parseInt(data.bench)},timestamp:moment().format('LL')};\r\n        if(typeof prevData !== 'undefined'){\r\n            const prevDataSet = JSON.parse(prevData)\r\n            prevDataSet.push(newData);\r\n            console.log('_______',prevDataSet);\r\n            rootStore.generalStore.setData(prevDataSet);\r\n            cookie.set('data',prevDataSet);\r\n\r\n        }\r\n        else{\r\n            cookie.set('data',[newData]);\r\n            rootStore.generalStore.setData([newData]);\r\n        }\r\n\r\n    }*/\r\n    submitDataToCookies(data){\r\n        const nextSquatGoal = this.calculateNextGoal(parseFloat(this.state.squat),this.state.squatReps);\r\n        const nextBenchGoal = this.calculateNextGoal(parseFloat(this.state.bench),this.state.benchReps);\r\n        const nextDeadliftGoal = this.calculateNextGoal(parseFloat(this.state.deadlift),this.state.deadliftReps);\r\n        const nextSquatGoalInt = this.calculateNextGoalInt(parseFloat(this.state.squat),this.state.squatReps);\r\n        const nextBenchGoalInt = this.calculateNextGoalInt(parseFloat(this.state.bench),this.state.benchReps);\r\n        const nextDeadliftGoalInt = this.calculateNextGoalInt(parseFloat(this.state.deadlift),this.state.deadliftReps);\r\n        const nextGoal = {squat:nextSquatGoal,deadlift:nextDeadliftGoal,bench:nextBenchGoal};\r\n        const nextGoalInt = {squat:nextSquatGoalInt,deadlift:nextDeadliftGoalInt,bench:nextBenchGoalInt};\r\n        cookie.set('nextGoal',nextGoal);\r\n        const prevData = cookie.get('data')\r\n        console.log('prevData',typeof prevData,prevData,data);\r\n        if(typeof prevData !== 'undefined'){\r\n            const prevDataSet = JSON.parse(prevData)\r\n            const addDay = prevDataSet.length\r\n            prevDataSet.push({data:{squat:data.squat,squatReps:data.squatReps,deadlift:data.deadlift,deadliftReps:data.deadliftReps,bench:data.bench,benchReps:data.benchReps},timestamp:moment().format('LL')});\r\n            rootStore.generalStore.setData(prevDataSet);\r\n            rootStore.generalStore.setNextGoal(nextGoal);\r\n            rootStore.generalStore.setNextGoalInt(nextGoalInt);\r\n            cookie.set('next',nextGoalInt);\r\n            cookie.set('data',prevDataSet);\r\n        }\r\n        else{\r\n            cookie.set('data',[{data:data,timestamp:moment().format('LL')}]);\r\n            cookie.set('next',nextGoalInt);\r\n            rootStore.generalStore.setData([{data:data,timestamp:moment().format('LL')}]);\r\n            rootStore.generalStore.setNextGoal(nextGoal);\r\n            rootStore.generalStore.setNextGoalInt(nextGoalInt);\r\n            this.setState({submitted:true})\r\n        }\r\n\r\n    }\r\n    removeData(){\r\n        cookie.remove('data')\r\n        cookie.remove('nextGoal')\r\n        cookie.remove('next')\r\n        window.location.reload();\r\n    }\r\n\r\n    renderActiveQuestion(){\r\n        switch(this.state.activeQuestion) {\r\n            case 'squat':\r\n                return <div className=\"fadedshort\" style={{width: '100%', display: 'block', marginTop: 50}}>\r\n                    <input\r\n                    autoFocus={true}\r\n                    max={400}\r\n                    min={0}\r\n                    style={{display: 'inline-block',width:200}}\r\n                    type=\"number\"\r\n                    name=\"squat\"\r\n                    value={this.state.squat}\r\n                    placeholder=\"Squat\"\r\n                    className=\"signup-form\"\r\n                    onChange={(e) => {\r\n                        this.handleSurveyChangeSquat(e)\r\n                    }}\r\n                    onKeyPress={(event) => {\r\n                        if (event.key === 'Enter') {\r\n                            if(this.state.squatReps){\r\n                                this.setState({activeQuestion: 'bench',reps:0})\r\n                            }\r\n\r\n                        }\r\n                    }}\r\n                />\r\n                    <input\r\n                        max={400}\r\n                        min={0}\r\n                        style={{display: 'inline-block',width:80}}\r\n                        type=\"number\"\r\n                        name=\"reps\"\r\n                        disabled={this.state.loggingMax&&this.state.squatReps}\r\n                        value={this.state.reps||this.state.squatReps}\r\n                        placeholder=\"x reps\"\r\n                        className=\"signup-form\"\r\n                        onChange={(e) => {\r\n                            this.handleSurveyChangeReps(e,'squat')\r\n                        }}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                // @ts-ignore\r\n                                document.activeElement.blur()\r\n                                this.setState({activeQuestion: 'bench',reps:0})\r\n\r\n                            }\r\n                        }}\r\n                    />\r\n\r\n\r\n                </div>;\r\n            case 'bench':\r\n                return(<div style={{width: '100%', display: 'block', marginTop: 50}}>\r\n                    <input\r\n                        autoFocus={true}\r\n                        max={400}\r\n                        min={0}\r\n                        style={{display: 'inline-block',width:200}}\r\n                        type=\"number\"\r\n                        name=\"bench\"\r\n                        value={this.state.bench}\r\n\r\n                        placeholder=\"Bench\"\r\n                        className=\"signup-form fadedshort\"\r\n                        onChange={(e) => {\r\n                            this.handleSurveyChangeBench(e)\r\n                        }}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n\r\n                                if(this.state.benchReps){\r\n                                    this.setState({activeQuestion: 'deadlift',reps:0})\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <input\r\n                        max={400}\r\n                        min={0}\r\n                        style={{display: 'inline-block',width:80}}\r\n                        type=\"number\"\r\n                        name=\"reps\"\r\n                        disabled={this.state.loggingMax&&this.state.benchReps}\r\n                        value={this.state.reps||this.state.benchReps}\r\n                        placeholder=\"x reps\"\r\n                        className=\"signup-form fadedshort\"\r\n                        onChange={(e) => {\r\n                            this.handleSurveyChangeReps(e,'bench')\r\n                        }}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.setState({activeQuestion: 'deadlift',reps:0})\r\n                                // @ts-ignore\r\n                                document.activeElement.blur()\r\n\r\n                            }\r\n                        }}\r\n                    />\r\n\r\n                </div>);\r\n            case 'deadlift':\r\n                return(<div className=\"fadedshort\"  style={{width: '100%', display: 'block', marginTop: 50}}>\r\n                    <input\r\n                        autoFocus={true}\r\n                        max={400}\r\n                        min={0}\r\n                        style={{display: 'inline-block',width:200}}\r\n                        type=\"number\"\r\n                        name=\"deadlift\"\r\n                        value={this.state.deadlift}\r\n                        placeholder=\"Deadlift\"\r\n                        className=\"signup-form fadedshort\"\r\n                        onChange={(e) => {\r\n                            this.handleSurveyChangeDeadlift(e)\r\n                        }}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                if(this.state.deadliftReps){\r\n                                    this.setState({activeQuestion: null,reps:0})\r\n                                    this.submitDataToCookies(this.state)\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <input\r\n                        max={400}\r\n                        min={0}\r\n                        style={{display: 'inline-block',width:80}}\r\n                        type=\"number\"\r\n                        name=\"reps\"\r\n                        disabled={this.state.loggingMax&&this.state.deadliftReps}\r\n                        value={this.state.reps||this.state.deadliftReps}\r\n                        placeholder=\"x reps\"\r\n                        className=\"signup-form fadedshort\"\r\n                        onChange={(e) => {\r\n                            this.handleSurveyChangeReps(e,'deadlift')\r\n                        }}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.setState({activeQuestion: null,reps:0})\r\n                                this.submitDataToCookies(this.state)\r\n\r\n                            }\r\n                        }}\r\n                    />\r\n\r\n                </div>);\r\n            default:\r\n                if(this.state.squatReps==1&&this.state.benchReps==1&&this.state.deadliftReps==1){\r\n                    (<div className=\"fadedshort\" ><h3>Your one rep max has been logged. Please use the below training max</h3>\r\n                        <br/>\r\n                        <div className=\"fadedshort\">\r\n                            {this.state.squat&&<>Squat: {this.state.squat}</>}\r\n                            <br />\r\n                            {this.state.squat&&<>Training Max: {Math.ceil(0.9*this.state.squat)}</>}\r\n<br />\r\n\r\n                            {this.state.bench&&<>Bench: {this.state.bench}</>}\r\n                            <br />\r\n                            {this.state.bench&&<>Training Max: {Math.ceil(0.9*this.state.bench)}</>}\r\n                            <br />\r\n                            {this.state.deadlift&&<>Deadlift: {this.state.deadlift}</>}\r\n                            <br />\r\n                            {this.state.deadlift&&<>Training Max: {Math.ceil(0.9*this.state.deadlift)}</>}\r\n                            <br />\r\n\r\n                        </div></div>)\r\n                }\r\n                return(<div className=\"fadedshort\" ><h3 style={{color:'pink'}}>Your work has been logged. Thank you.</h3>\r\n                <br/></div>)\r\n\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        console.log(rootStore.generalStore.data)\r\n        return (<div style={{height:'100%',width:'25%',backgroundColor:\"transparent\"}} className=\"fadedshort\">\r\n                <div style={{display:'flex',justifyContent:'center'}}>\r\n                    <div style={{width:400,margin:0,height:400,backgroundColor:'#f7e1c7',borderRadius:12,marginBottom:50,border:'2px solid #fff'}}>\r\n                        <p style={{height:40,color:'#fff'}}>{this.state.submitted?`Log today's training session`:`Submit Your One Rep Max`}</p>\r\n                        {rootStore.generalStore.nextGoal.squat?<div style={{color:'white'}}>\r\n                            <h3 style={{color:'white',margin:0}}>{rootStore.generalStore.data.length===1?'Your programme has been generated below':'Try for these numbers next week'}</h3>\r\n                            <p><b>S</b>{rootStore.generalStore.nextGoal.squat}  <b style={{marginLeft:10}}>B</b>{rootStore.generalStore.nextGoal.bench} <b style={{marginLeft:10}}>D</b>{rootStore.generalStore.nextGoal.deadlift}</p>\r\n                            </div>:null}\r\n\r\n                        <div className=\"scrollbar\" style={{maxHeight:90,overflowY:'auto',overflowX:'hidden',maxWidth:399}}>{rootStore.generalStore.data.length>=1?<div>{rootStore.generalStore.data.map((data)=>{\r\n                            console.log('...',data);\r\n                            return(<div style={{borderBottom:'1px solid #f5f4fa',backgroundColor:'pink',color:'white',maxWidth:399,width:399,overflowX:'hidden',display:'flex',justifyContent:'space-evenly'}}><div>{data.timestamp}</div><div style={{marginLeft:20,width:40}}>S{data.data.squat} x{data.data.squatReps}</div><div style={{marginLeft:20,width:40}}>B{data.data.bench} x{data.data.benchReps}</div><div style={{marginLeft:20,width:40}}>D{data.data.deadlift} x{data.data.deadliftReps}</div>\r\n                            </div>)\r\n                        })}\r\n                            <div style={{marginTop:10,display:'flex',justifyContent:'center',height:30}}> <div style={{width:'95%',backgroundColor:'#fff',border:'2px solid #f5f4fa',color:'#fae0e2',cursor:'pointer',borderRadius:8,height:22,fontSize:18}} onClick={()=>{this.removeData()}}>Clear All Logs</div></div>\r\n\r\n                        </div>:null}\r\n                        </div>\r\n                        <br />\r\n                        {this.renderActiveQuestion()}\r\n                        <div style={{marginTop:10,display:'flex',justifyContent:'center',height:30}}> <div style={{width:'95%',backgroundColor:'#fff',border:'2px solid #f5f4fa',color:'#fae0e2',cursor:'pointer',borderRadius:8,height:22,fontSize:18}} onClick={()=>{this.props.toggleGraph()}}>Toggle Progress Graph</div></div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst ObservedStrongSurvey = observer(StrongSurvey);\r\nexport default ObservedStrongSurvey;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Spinner extends Component {\r\n    get getSpinner() {\r\n        const { label } = this.props;\r\n        return (\r\n            <div className=\"spinner-content\">\r\n                <div className=\"spin\" />\r\n                {label ? <div className=\"spinner-label\">{label}</div> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { containerClass, className, size } = this.props;\r\n        const htmlContainerProps = {\r\n            className: containerClass,\r\n        };\r\n        const htmlPlaceholderProps = {\r\n            className: `spinner spinner-${size} spinner-is-spinning${className ? ` ${className}` : \"\"}`,\r\n        };\r\n        const innerPlaceholder = this.getSpinner;\r\n        let componentRender = (\r\n            <div {...htmlPlaceholderProps}>\r\n                {innerPlaceholder}\r\n            </div>\r\n        );\r\n        if(containerClass) {\r\n            componentRender = (\r\n                <div {...htmlContainerProps}>\r\n                    {componentRender}\r\n                </div>\r\n            );\r\n        }\r\n        return (componentRender);\r\n    }\r\n}\r\n\r\nSpinner.propTypes = {\r\n    containerClass: PropTypes.string,\r\n    className: PropTypes.string,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n};\r\nSpinner.defaultProps = {\r\n    containerClass: \"\",\r\n    className: \"\",\r\n    label: \"\",\r\n    size: \"large\",\r\n};\r\nSpinner.contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport deepEqual from \"deep-equal\";\r\nimport Chart from 'chart.js'\r\nclass ChartWrapper extends Component {\r\n    /*\r\n     content variable must have the structure:\r\n     [{\r\n     text: \"\",\r\n     position: {\r\n     x: 0,\r\n     y: 0\r\n     },\r\n     fillStyle: \"#FFF\",\r\n     fontSize: 14,\r\n     fontStyle: \"normal\",\r\n     fontFamily: \"Roboto\",\r\n     textBaseline: \"alphabetic\",\r\n     textAlign: \"left\"\r\n     }]\r\n     where all options are independent on the content item and position in case of middle alignment is added;\r\n     the text supports multi-line on same line-height as the item\r\n     */\r\n\r\n    static drawTextItems(ctx, width, height, content, alignment = \"normal\") {\r\n        ctx.restore();\r\n\r\n        const usingMiddleAlignment = alignment === \"middle\";\r\n\r\n        for(let i = 0; i < content.length; i++) {\r\n            const item = content[i];\r\n            if(item.text) {\r\n                const { text } = item;\r\n                const lines = text.split(\"\\n\");\r\n\r\n                for(let j = 0; j < lines.length; j++) {\r\n                    ctx.font = Chart.helpers.fontString(item.fontSize, item.fontStyle, item.fontFamily);\r\n                    ctx.textBaseline = item.textBaseline;\r\n                    ctx.textAlign = item.textAlign;\r\n                    ctx.fillStyle = item.fillStyle;\r\n                    const measureText = ctx.measureText(lines[j]);\r\n                    const x = (usingMiddleAlignment ? Math.round(width - measureText.width) / 2 + item.position.x : item.position.x);\r\n                    const y = (usingMiddleAlignment ? Math.round(height / 2) + item.position.y : item.position.y) - item.fontSize / 2 * lines.length + item.fontSize * j;\r\n                    ctx.fillText(lines[j], x, y);\r\n                }\r\n            }\r\n        }\r\n\r\n        ctx.save();\r\n    }\r\n\r\n    static drawText(ctx, width, height, text, alignment = \"normal\", position = {\r\n        x: 0,\r\n        y: 0,\r\n    }, fillStyle = \"#FFF\", fontSize = 14, fontStyle = \"normal\", fontFamily = \"Roboto\", textBaseline = \"alphabetic\", textAlign = \"left\") {\r\n        ctx.restore();\r\n\r\n        ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);\r\n        ctx.textBaseline = textBaseline;\r\n        ctx.textAlign = textAlign;\r\n        ctx.fillStyle = fillStyle;\r\n\r\n        const usingMiddleAlignment = alignment === \"middle\";\r\n        const lines = text.split(\"\\n\");\r\n        for(let i = 0; i < lines.length; i++) {\r\n            const measureText = ctx.measureText(lines[i]);\r\n            const y = (usingMiddleAlignment ? height / 2 + position.y : position.y) - fontSize / 2 * lines.length + fontSize * i;\r\n            const x = (usingMiddleAlignment ? width / 2 - measureText.width / 2 + position.x : position.x);\r\n            ctx.fillText(lines[i], x, y);\r\n        }\r\n\r\n        ctx.save();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            type, data, options, plugins,\r\n        } = this.props;\r\n\r\n        this.chartInstance = new Chart(this.canvas, {\r\n            type,\r\n            data,\r\n            options,\r\n            plugins,\r\n        });\r\n        try{this.props.chartHandle(this.chartInstance);}catch(e){console.log('error',e)}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { data, options } = this.props;\r\n\r\n        const nextData = deepEqual(data, nextProps.data);\r\n        const nextOptions = deepEqual(options, nextProps.options);\r\n        if(!nextData || !nextOptions) {\r\n            this.updateChart(nextProps);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.chartInstance.destroy();\r\n    }\r\n\r\n    updateChart(nextProps) {\r\n        const chart = this.chartInstance;\r\n        chart.config.data = nextProps.data;\r\n        chart.config.options = nextProps.options;\r\n        chart.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                ref={canvas => this.canvas = canvas}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nChartWrapper.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    data: PropTypes.object.isRequired,\r\n    options: PropTypes.object,\r\n    plugins: PropTypes.array,\r\n};\r\nChartWrapper.defaultProps = {\r\n    plugins: [],\r\n    options: {},\r\n};\r\n\r\nexport default ChartWrapper;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n    Button, MenuItem, Position, Classes, Intent,\r\n} from \"@blueprintjs/core\";\r\nimport { MultiSelect, Select } from \"@blueprintjs/select\";\r\nimport { DateTime } from \"luxon\";\r\nimport Spinner from \"./spinner\";\r\nimport ChartWrapper from \"./chartwrapper\";\r\nimport Search from \"./search\";\r\n\r\nclass Daily extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartHandle = this.chartHandle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // fetch data\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            selectedLegend: [],\r\n            selectedOrganizations: [],\r\n            dataItems: [],\r\n            updated: false,\r\n            legendItems: [{\r\n                datasetIndex: 0,\r\n                fillStyle: \"#b16037\",\r\n                hidden: false,\r\n                lineCap: \"\",\r\n                lineDash: \"\",\r\n                lineDashOffset: \"\",\r\n                lineJoin: \"\",\r\n                lineWidth: 1,\r\n                pointStyle: \"\",\r\n                strokeStyle: \"#b16037\",\r\n                text: \"Organization1 Score3\",\r\n            }],\r\n        });\r\n    }\r\n\r\n    chartHandle(chart) {\r\n        const chartInstanceHandle = chart;\r\n        this.setState({\r\n            chartInstance: chartInstanceHandle,\r\n            legendItems: chartInstanceHandle.legend.legendItems,\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const submitted=this.props.submitted\r\n        /* const clearButton =\r\n            this.state.selectedLegend.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={this.handleClear} /> : undefined;*/\r\n        const shortTermChartColorStorage = [\r\n            \"#efd8ff\",\r\n        ];\r\n        if(true) {\r\n            const randHex = Math.floor(Math.random() * 16777215);\r\n            const color = `#${randHex.toString(16)}`;\r\n            const color2 = `#${Math.floor(randHex - 5000).toString(16)}`;\r\n            const color3 = `#${Math.floor(randHex - 8000).toString(16)}`;\r\n            const squatData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.squat})});\r\n            const benchData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.bench})});\r\n            const deadliftData= this.props.dataset.map((data)=>{return({x:data.timestamp,y:data.data.deadlift})});\r\n            const testData = this.props.dataset;\r\n            console.log('WHAT IS MY TEST DATA',testData,squatData,benchData,deadliftData);\r\n\r\n            const dataset2 = [\r\n                        {\r\n                            label: `Squat`,\r\n                            backgroundColor: color,\r\n                            borderColor: color,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color,\r\n                            hoverBorderColor: color,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:squatData\r\n                        },\r\n                        {\r\n                            label: `Bench`,\r\n                            backgroundColor: color2,\r\n                            borderColor: color2,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color2,\r\n                            hoverBorderColor: color2,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:benchData\r\n                        },\r\n                        {\r\n                            label: `Deadlift`,\r\n                            backgroundColor: color3,\r\n                            borderColor: color3,\r\n                            borderWidth: 1,\r\n                            hoverBackgroundColor: color3,\r\n                            hoverBorderColor: color3,\r\n                            fill: false,\r\n                            showLine: true,\r\n                            hidden: false,\r\n                            data:deadliftData\r\n                        }];\r\n            const chartConfig = {\r\n                labels: this.props.dataset.length>=1?[moment(this.props.dataset[0].timestamp).toISOString(),moment(this.props.dataset[this.props.dataset.length-1].timestamp).toISOString()]:[new Date().toISOString(),moment().add('30','day').toISOString()],\r\n                datasets: dataset2,\r\n            };\r\n\r\n            return (\r\n                <section style={{width:800,height:800}}>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"container\">\r\n                            <div style={{ margin: 15 }}>\r\n                                <ChartWrapper\r\n                                    chartHandle={this.chartHandle}\r\n                                    type=\"line\"\r\n                                    data={chartConfig}\r\n                                    options={{\r\n                                        animationTime: 0,\r\n                                        hoverMode: \"index\",\r\n                                        stacked: false,\r\n                                        legend: {\r\n                                            display: false,\r\n                                            position: \"bottom\",\r\n                                            /* labels: {\r\n                                                filter(item, chart) {\r\n                                                    // Logic to remove a particular legend item goes here\r\n                                                    return item.text.includes('TEST 2 Score1');\r\n                                                },\r\n                                            },*/\r\n                                        },\r\n                                        annotation: {\r\n                                            annotations: [\r\n\r\n                                            ],\r\n                                        },\r\n\r\n                                        tooltips: {\r\n                                            mode: \"nearest\",\r\n                                            intersect: true,\r\n                                            enabled: true,\r\n                                            callbacks: {\r\n                                                label(tooltipItems, data) {\r\n                                                    const averageDataSetIndex = tooltipItems.datasetIndex;\r\n                                                    console.log(data,tooltipItems);\r\n                                                    return `${data.datasets[tooltipItems.datasetIndex].label}: ${tooltipItems.yLabel} kg/lb `;\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                        scales: {\r\n\r\n                                            xAxes: [{\r\n                                                type: \"time\",\r\n                                                time: {\r\n                                                    unit: \"day\",\r\n                                                    displayFormats: {\r\n                                                        day: \"MMM D\",\r\n                                                    },\r\n                                                    tooltipFormat: \"MMM D\",\r\n                                                    display: true,\r\n                                                    ticks: {\r\n                                                        display: true,\r\n                                                        source: \"labels\",\r\n                                                    },\r\n                                                    scaleLabel: {\r\n                                                        display: true,\r\n                                                    },\r\n\r\n                                                },\r\n                                            }],\r\n                                            yAxes: [{\r\n                                                ticks: {\r\n                                                    stepSize: 1,\r\n                                                },\r\n                                                scaleLabel: {\r\n                                                    display: true,\r\n                                                    labelString: \"KG/LB\",\r\n                                                },\r\n                                            }],\r\n                                        },\r\n                                    }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            );\r\n        }\r\n        return (\r\n            <div style={{ marginTop: 30 }}>\r\n                <Spinner\r\n                    animated\r\n                    content={[\"Extracting information...\",\r\n                        \"Generating Chart...\", \"Aquiring Birthdays...\", \"Integrating Data Structures...\",\r\n                        \"Taking Temperatures...\", \"Inheriting Schematics...\", \"Rolling up data source...\", \"Drilling down...\"]\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDaily.propTypes = {};\r\nDaily.contextTypes = {\r\n    router: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default (Daily);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport ObservedStrongSurvey from \"./StrongSurvey\";\r\n\r\nimport {toJS} from \"mobx\";\r\nimport {rootStore} from \"../stores/Stores\";\r\nimport LineGraph from \"./graph/daily\";\r\n\r\nexport interface IHeaderState {\r\n    username:any;\r\n    submitted:any;\r\n    showGraph:any;\r\n}\r\ninterface IHeaderProps {\r\n    generalStore:any;\r\n\r\n}\r\n\r\n\r\nclass StrongFactory extends React.Component<IHeaderProps, IHeaderState> {\r\n    constructor(props: IHeaderProps, state:IHeaderState) {\r\n        super(props);\r\n        this.state = { username: '',submitted:false,showGraph:false };\r\n    }\r\n    toggleGraph(){\r\n        this.setState({showGraph:!this.state.showGraph})\r\n    }\r\n    setSubmitted(submitted){\r\n        this.setState({submitted})\r\n\r\n    }\r\n    calculateWeight(multiplier,weight){\r\n        // @ts-ignore\r\n        return parseFloat(weight*multiplier);\r\n    }\r\n\r\n    public render() {\r\n        const activeDL = rootStore.generalStore.nextGoalInt.deadlift;\r\n        const activeBench = rootStore.generalStore.nextGoalInt.bench;\r\n        const activeSquat = rootStore.generalStore.nextGoalInt.squat;\r\n        const activeOHP = 70;\r\n        return (<div style={{height:'100%',width:'100%',backgroundColor:'#f5f4fa'}}>\r\n                <div style={{display:'flex',justifyContent:'center',paddingTop:200}}><h3 style={{color:'#4264ea'}} className=\"strongFont\"></h3></div>\r\n                <div style={{display:'flex',height:480}}>\r\n                    <div style={{width:'33%'}}>\r\n                    </div>\r\n                    <ObservedStrongSurvey toggleGraph={this.toggleGraph.bind(this)} rootStore={this.props.rootStore} setSubmitted={this.setSubmitted.bind(this)} />\r\n                    {this.state.showGraph?<div>\r\n                        <section className=\"dashboard content container fadedshort\">\r\n                            <div className=\"wrapper\">\r\n                                <LineGraph dataset={rootStore.generalStore.data} submitted={this.state.submitted} />\r\n                            </div>\r\n                        </section>\r\n                    </div>:null}\r\n\r\n                    <div style={{width:'33%'}}>\r\n                    <div><h2 className=\"strongFont\" ></h2></div>\r\n                </div>\r\n                </div>\r\n                <div style={{display:'flex',justifyContent:'center'}}><div style={{width:800,fontSize:14,margin:20,padding:20,backgroundColor:'#f5f4fa'}}>\r\n                    {rootStore.generalStore.data.length<1?<div><p>\r\n                            Start by entering your one rep maxes, your training maxes will be calculated at 90% of your true max.</p><p>\r\n                        Each week, you will increase your training max if you were able to complete all the reps, <p>your new peak set will be suggested for you based on how many reps you achieved.</p>\r\n                        <p>Your progress is stored in cookies and will be logged on the graph on the right and can be cleared at any time. </p>\r\n                    </p></div>:null}\r\n                    {/*TODO LP programme here - maxes up the top*/}\r\n                    {rootStore.generalStore.data.length>=1?<table>\r\n                        <thead>\r\n                        <tr><td>Max:</td><td>Squat - {activeSquat}</td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td> <td>Bench - {activeBench}</td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td>Deadlift - {activeDL}</td></tr>\r\n                        <tr><td>TM: </td><td>Squat - {parseFloat(0.9*activeSquat)}</td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td>Bench - {parseFloat(0.9*activeBench)}</td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td className=\"blank-cell\"></td><td>Deadlift -{parseFloat(0.9*activeDL)}</td></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr><td className=\"routine-cell\">Bench</td><td>{this.calculateWeight(0.65,activeBench)}  x8</td><td>{this.calculateWeight(0.75,activeBench)}   x6</td><td>{this.calculateWeight(0.85,activeBench)}  x4</td><td>{this.calculateWeight(0.85,activeBench)}  x4</td><td>{this.calculateWeight(0.85,activeBench)}  x4</td><td>{this.calculateWeight(0.8,activeBench)} x5</td><td>{this.calculateWeight(0.75,activeBench)}  x6</td><td>{this.calculateWeight(0.7,activeBench)}  x7</td><td>{this.calculateWeight(0.6,activeBench)}  x8</td></tr>\r\n                        <tr><td>OHP</td><td>{this.calculateWeight(0.5,activeOHP)}  x6</td><td>{this.calculateWeight(0.6,activeOHP)}  x5</td><td>{this.calculateWeight(0.7,activeOHP)} x3</td><td>{this.calculateWeight(0.7,activeOHP)} x5</td><td>{this.calculateWeight(0.7,activeOHP)} x7</td><td>{this.calculateWeight(0.7,activeOHP)} x4</td><td>{this.calculateWeight(0.7,activeOHP)} x6</td><td>{this.calculateWeight(0.7,activeOHP)} x8</td><td></td></tr>\r\n                        <tr><td className=\"blank-cell\"/></tr>\r\n                        <tr><td>Squat</td><td>{this.calculateWeight(0.75,activeSquat)} x5</td><td>{this.calculateWeight(0.85,activeSquat)}  x3</td><td>{this.calculateWeight(0.95,activeSquat)}  x1+</td><td>{this.calculateWeight(0.90,activeSquat)}  x3</td><td>{this.calculateWeight(0.85,activeSquat)}  x3</td><td>{this.calculateWeight(0.8,activeSquat)}  x3</td><td>{this.calculateWeight(0.75,activeSquat)}  x5</td><td>{this.calculateWeight(0.7,activeSquat)}  x5</td><td>{this.calculateWeight(0.6,activeSquat)}  x5</td></tr>\r\n                        <tr><td>Deadlift</td><td>{this.calculateWeight(0.5,activeDL)}  x5</td><td>{this.calculateWeight(0.6,activeDL)} x5</td><td>{this.calculateWeight(0.7,activeDL)} x3</td><td>{this.calculateWeight(0.7,activeDL)}  x5</td><td>{this.calculateWeight(0.7,activeDL)}  x7</td><td>{this.calculateWeight(0.7,activeDL)}  x4</td><td>{this.calculateWeight(0.7,activeDL)}  x6</td><td>{this.calculateWeight(0.7,activeDL)}  x8</td><td>{this.calculateWeight(0.7,activeDL)}  x8</td></tr>\r\n                        <tr><td className=\"blank-cell\"/></tr>\r\n                        <tr><td>OHP</td><td>{this.calculateWeight(0.65,activeOHP)}  x5</td><td>{this.calculateWeight(0.75,activeOHP)}  x3</td><td>{this.calculateWeight(0.85,activeOHP)}  x1+</td><td>{this.calculateWeight(0.85,activeOHP)}  x3</td><td>{this.calculateWeight(0.85,activeOHP)}  x3</td><td>{this.calculateWeight(0.8,activeOHP)}  x3</td><td>{this.calculateWeight(0.75,activeOHP)}  x5</td><td>{this.calculateWeight(0.7,activeOHP)}  x5</td><td>{this.calculateWeight(0.6,activeOHP)}  x5+</td></tr>\r\n                        <tr><td>Incline Bench</td><td>{this.calculateWeight(0.4,activeBench)}  x6</td><td>{this.calculateWeight(0.5,activeBench)} x5</td><td>{this.calculateWeight(0.6,activeBench)}  x3</td><td>{this.calculateWeight(0.6,activeBench)} x5</td><td>{this.calculateWeight(0.6,activeBench)}  x7</td><td>{this.calculateWeight(0.6,activeBench)}  x4</td><td>{this.calculateWeight(0.6,activeBench)}  x8</td><td>{this.calculateWeight(0.6,activeBench)} x8</td><td></td></tr>\r\n                        <tr><td className=\"blank-cell\"/></tr>\r\n                        <tr><td>Deadlift</td><td>{this.calculateWeight(0.75,activeDL)}  x5</td><td>{this.calculateWeight(0.85,activeDL)}  x3</td><td>{this.calculateWeight(0.95,activeDL)} x1+</td><td>{this.calculateWeight(0.9,activeDL)}  x3</td><td>{this.calculateWeight(0.85,activeDL)} x3</td><td>{this.calculateWeight(0.8,activeDL)}  x3</td><td>{this.calculateWeight(0.75,activeDL)}  x3</td><td>{this.calculateWeight(0.7,activeDL)}  x3</td><td>{this.calculateWeight(0.6,activeDL)}  x3</td></tr>\r\n                        <tr><td>Front Squat</td><td>{this.calculateWeight(0.35,activeSquat)} x5</td><td>{this.calculateWeight(0.45,activeSquat)} x5</td><td>{this.calculateWeight(0.55,activeSquat)} x3</td><td>{this.calculateWeight(0.55,activeSquat)} x5</td><td>{this.calculateWeight(0.55,activeSquat)}x7</td><td>{this.calculateWeight(0.55,activeSquat)} x4</td><td>{this.calculateWeight(0.55,activeSquat)}x6</td><td>{this.calculateWeight(0.55,activeSquat)} x8</td><td></td></tr>\r\n                        <tr><td className=\"blank-cell\"/></tr>\r\n                        <tr><td>Bench</td><td>{this.calculateWeight(0.65,activeBench)}  x5</td><td>{this.calculateWeight(0.75,activeBench)}  x3</td><td>{this.calculateWeight(0.85,activeBench)}  x1+</td><td>{this.calculateWeight(0.85,activeBench)}  x3</td><td>{this.calculateWeight(0.85,activeBench)} x5</td><td>{this.calculateWeight(0.8,activeBench)}  x3</td><td>{this.calculateWeight(0.75,activeBench)}  x5</td><td>{this.calculateWeight(0.7,activeBench)}  x3</td><td>{this.calculateWeight(0.6,activeBench)}  x5+</td></tr>\r\n                        <tr><td>CG Bench</td><td>{this.calculateWeight(0.4,activeBench)} x6</td><td>{this.calculateWeight(0.5,activeBench)} x5</td><td>{this.calculateWeight(0.6,activeBench)} x3</td><td>{this.calculateWeight(0.6,activeBench)} x5</td><td>{this.calculateWeight(0.6,activeBench)} x7</td><td>{this.calculateWeight(0.6,activeBench)} x4</td><td>{this.calculateWeight(0.6,activeBench)} x6</td><td>{this.calculateWeight(0.6,activeBench)} x8</td><td></td></tr>\r\n\r\n\r\n\r\n\r\n                        </tbody>\r\n                    </table>:null}\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst ObservedStrongFactory = observer(StrongFactory);\r\nexport default ObservedStrongFactory;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport {inject, observer} from \"mobx-react\";\nimport ObservedStrongFactory from \"./components/StrongFactory\";\n\n@inject('rootStore')@observer class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n\n    return (\n        <div className=\"App\">\n          <ObservedStrongFactory rootStore={this.props.rootStore}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"mobx-react\";\nimport {rootStore} from \"./stores/Stores\";\n\nReactDOM.render(<Provider\n    rootStore={rootStore}\n>\n    <App />\n</Provider>, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}